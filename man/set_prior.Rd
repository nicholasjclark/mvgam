% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/priors.R
\name{set_prior}
\alias{set_prior}
\title{Set Prior for mvgam Models}
\usage{
set_prior(
  prior,
  class = "b",
  coef = "",
  group = "",
  resp = "",
  dpar = "",
  nlpar = "",
  lb = NA,
  ub = NA,
  check = TRUE
)
}
\arguments{
\item{prior}{A character string defining the prior distribution in Stan syntax
(e.g., \code{"normal(0, 1)"}, \code{"exponential(2)"}).}

\item{class}{A character string specifying the parameter class. For trend
parameters, use the \code{_trend} suffix (e.g., \code{"ar1_trend"},
\code{"sigma_trend"}). Defaults to \code{"b"} (regression coefficients).}

\item{coef}{Character string specifying a specific coefficient name.
Defaults to empty string (all coefficients in class).}

\item{group}{Character string specifying a grouping factor.
Defaults to empty string (population-level effect).}

\item{resp}{Character string specifying a response variable in
multivariate models. Defaults to empty string.}

\item{dpar}{Character string specifying a distributional parameter.
Defaults to empty string.}

\item{nlpar}{Character string specifying a non-linear parameter.
Defaults to empty string.}

\item{lb}{Numeric value specifying lower bound constraint.
Defaults to \code{NA} (no lower bound).}

\item{ub}{Numeric value specifying upper bound constraint.
Defaults to \code{NA} (no upper bound).}

\item{check}{Logical indicating whether to validate prior specification.
Defaults to \code{TRUE}.}
}
\value{
A \code{brmsprior} object enhanced with mvgam attributes. Fully
compatible with \code{brms::set_prior} return values and supports
combination with \code{+} operator.
}
\description{
Wrapper function around \code{brms::set_prior} that provides a unified
interface for setting priors on both observation and trend model parameters.
Automatically routes observation parameters to brms while handling trend
parameters (\code{_trend} suffix) through the mvgam system. Maintains full
brms syntax compatibility while extending support for trend-specific parameters.
}
\details{
This function provides several key advantages over using \code{brms::set_prior}
directly:

\strong{Unified Interface:}
\itemize{
\item Single function for both observation and trend parameters
\item Automatic parameter type detection and routing
\item Consistent mvgam attribute enhancement across all outputs
}

\strong{Observation Parameters:}
\itemize{
\item Routed directly to \code{brms::set_prior} with identical behavior
\item Full brms syntax compatibility maintained
\item All standard brms parameter classes supported (\code{"b"}, \code{"Intercept"},
\code{"sd"}, \code{"cor"}, etc.)
}

\strong{Trend Parameters:}
\itemize{
\item Identified by \code{_trend} suffix in class name (e.g., \code{"ar1_trend"},
\code{"sigma_trend"})
\item Creates brmsprior objects using brms-compatible structure
\item Enhanced with mvgam attributes for proper downstream handling
\item Supports same bound constraints as brms parameters
}

\strong{Integration Benefits:}
\itemize{
\item All outputs work seamlessly with existing brms workflow
\item Enhanced objects provide better printing and summary information
\item Automatic compatibility with \code{get_prior.mvgam_formula()} system
\item Future-proof extension point for additional mvgam functionality
}
}
\examples{
\dontrun{
# Observation model priors (routed to brms::set_prior)
obs_prior <- set_prior("normal(0, 2)", class = "Intercept")
obs_coef <- set_prior("normal(0, 0.5)", class = "b", coef = "x1")

# Trend model priors (handled by mvgam system)
ar_prior <- set_prior("normal(0, 0.5)", class = "ar1_trend")
sigma_prior <- set_prior("exponential(2)", class = "sigma_trend")

# Bound constraints work for both types
bounded_prior <- set_prior("normal(0, 1)", class = "ar1_trend", 
                          lb = -0.99, ub = 0.99)

# Combine multiple priors with + operator
all_priors <- obs_prior + obs_coef + ar_prior + sigma_prior

# Use with mvgam()
model <- mvgam(y ~ x, trend_model = AR(), data = dat, prior = all_priors)

# Enhanced printing shows parameter organization
print(all_priors)
}

}
\seealso{
\code{\link{get_prior.mvgam_formula}}, \code{\link[brms]{set_prior}},
\code{\link{prior}}, \code{\link{mvgam_formula}}
}

{
    "s3_methods":  {

                   },
    "functions":  [
                      "mvgam",
                      "mvgam_single_dataset",
                      "generate_combined_stancode_and_data",
                      "fit_mvgam_model",
                      "create_mvgam_from_combined_fit",
                      "create_observation_brmsfit",
                      "create_trend_brmsfit",
                      "extract_observation_parameters",
                      "extract_trend_parameters",
                      "subset_stanfit_parameters",
                      "extract_mvgam_components",
                      "extract_time_information",
                      "extract_series_information",
                      "extract_trend_component_info",
                      "mvgam_multiple",
                      "validate_multiple_imputation_datasets",
                      "validate_missing_patterns",
                      "fit_multiple_imputation_models",
                      "mvgam_single_imputation",
                      "pool_mvgam_fits",
                      "extract_fit_estimates",
                      "apply_rubins_rules",
                      "pool_parameter_estimates",
                      "create_pooled_mvgam",
                      "extract_pooling_diagnostics"
                  ],
    "purpose":  "Core package functionality",
    "function_dependencies":  {

                              },
    "function_signatures":  {
                                "fit_multiple_imputation_models":  "fit_multiple_imputation_models \u003c- function(formula, trend_formula, data_list, backend, ...) {",
                                "fit_mvgam_model":  "fit_mvgam_model \u003c- function(stancode, standata, backend = \"cmdstanr\", ...) {",
                                "mvgam":  "mvgam \u003c- function(formula, trend_formula = NULL, data = NULL, backend = getOption(\"brms.backend\", \"cmdstanr\"), combine = TRUE, family = poisson(), ...) {",
                                "mvgam_single_dataset":  "mvgam_single_dataset \u003c- function(formula, trend_formula, data, backend, family, ...) {",
                                "mvgam_single_imputation":  "mvgam_single_imputation \u003c- function(formula, trend_formula, data, backend, imputation_id, ...) {",
                                "apply_rubins_rules":  "apply_rubins_rules \u003c- function(estimates_list) {",
                                "create_mvgam_from_combined_fit":  "create_mvgam_from_combined_fit \u003c- function(combined_fit, obs_setup, trend_setup = NULL, mv_spec = NULL) {",
                                "extract_trend_component_info":  "extract_trend_component_info \u003c- function(combined_fit, mv_spec) {",
                                "subset_stanfit_parameters":  "subset_stanfit_parameters \u003c- function(stanfit, param_names) {",
                                "create_observation_brmsfit":  "create_observation_brmsfit \u003c- function(combined_fit, obs_setup, mv_spec) {",
                                "create_pooled_mvgam":  "create_pooled_mvgam \u003c- function(template_fit, pooled_estimates) {",
                                "validate_missing_patterns":  "validate_missing_patterns \u003c- function(data_list) {",
                                "pool_mvgam_fits":  "pool_mvgam_fits \u003c- function(fits) {",
                                "extract_mvgam_components":  "extract_mvgam_components \u003c- function(combined_fit, obs_setup, trend_setup, mv_spec) {",
                                "mvgam_multiple":  "mvgam_multiple \u003c- function(formula, trend_formula = NULL, data_list, backend = NULL, combine = TRUE, ...) {",
                                "extract_trend_parameters":  "extract_trend_parameters \u003c- function(combined_fit, mv_spec) {",
                                "extract_observation_parameters":  "extract_observation_parameters \u003c- function(combined_fit) {",
                                "extract_pooling_diagnostics":  "extract_pooling_diagnostics \u003c- function(pooled_estimates) {",
                                "extract_time_information":  "extract_time_information \u003c- function(data) {",
                                "generate_combined_stancode_and_data":  "generate_combined_stancode_and_data \u003c- function(obs_setup, trend_setup, mv_spec, validate = TRUE) {",
                                "extract_series_information":  "extract_series_information \u003c- function(data, mv_spec) {",
                                "extract_fit_estimates":  "extract_fit_estimates \u003c- function(fit) {",
                                "pool_parameter_estimates":  "pool_parameter_estimates \u003c- function(param_list) {",
                                "create_trend_brmsfit":  "create_trend_brmsfit \u003c- function(combined_fit, trend_setup, mv_spec) {",
                                "validate_multiple_imputation_datasets":  "validate_multiple_imputation_datasets \u003c- function(data_list) {"
                            },
    "file":  "R/mvgam_core.R"
}

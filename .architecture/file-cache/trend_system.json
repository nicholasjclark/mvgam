{
    "s3_methods":  {
                       "c":  [
                                 "trend_param"
                             ],
                       "print":  [
                                     "trend_param",
                                     "mvgam_trend"
                                 ],
                       "is":  [
                                  "trend_param"
                              ]
                   },
    "functions":  [
                      "register_trend_type",
                      "get_trend_info",
                      "list_trend_types",
                      "get_factor_compatible_trends",
                      "get_default_incompatibility_reason",
                      "auto_register_trend_types",
                      "register_core_trends",
                      "validate_trend_properties",
                      "ar_trend_properties",
                      "rw_trend_properties",
                      "var_trend_properties",
                      "zmvn_trend_properties",
                      "car_trend_properties",
                      "pw_trend_properties",
                      "register_custom_trend",
                      "is_registry_initialized",
                      "ensure_registry_initialized",
                      "trend_param",
                      "c.trend_param",
                      "is.trend_param",
                      "print.trend_param",
                      "evaluate_param_conditions",
                      "generate_monitor_params",
                      "generate_rw_monitor_params",
                      "generate_ar_monitor_params",
                      "generate_var_monitor_params",
                      "generate_car_monitor_params",
                      "generate_zmvn_monitor_params",
                      "generate_pw_monitor_params",
                      "normalize_trend_type",
                      "add_monitor_params",
                      "generate_forecast_metadata",
                      "generate_forecast_required_params",
                      "filter_rw_forecast_params",
                      "filter_ar_forecast_params",
                      "filter_var_forecast_params",
                      "filter_car_forecast_params",
                      "filter_zmvn_forecast_params",
                      "filter_pw_forecast_params",
                      "add_forecast_metadata",
                      "generate_summary_labels",
                      "generate_parameter_label",
                      "add_summary_labels",
                      "add_complete_metadata",
                      "process_trend_params",
                      "mvgam_trend_registry",
                      "mvgam_trend_choices",
                      "mvgam_trend_pattern",
                      "build_trend_label",
                      "custom_trend",
                      "find_trend_terms",
                      "extract_regular_terms",
                      "parse_trend_formula",
                      "eval_trend_constructor",
                      "print.mvgam_trend",
                      "get_mvgam_trend_defaults",
                      "apply_mvgam_trend_defaults",
                      "get_default_validation_rules",
                      "create_mvgam_trend",
                      "process_arg",
                      "validate_trend_dispatch_consistency",
                      "get_trend_dispatch_function",
                      "add_consistent_dispatch_metadata",
                      "RW",
                      "AR",
                      "CAR",
                      "VAR",
                      "GP",
                      "PW",
                      "ZMVN"
                  ],
    "purpose":  "Trend modeling",
    "function_dependencies":  {

                              },
    "function_signatures":  {
                                "filter_var_forecast_params":  "filter_var_forecast_params \u003c- function(monitor_params, trend_spec) {",
                                "get_default_validation_rules":  "get_default_validation_rules \u003c- function(trend_type) {",
                                "generate_pw_monitor_params":  "generate_pw_monitor_params \u003c- function(trend_spec) {",
                                "filter_rw_forecast_params":  "filter_rw_forecast_params \u003c- function(monitor_params, trend_spec) {",
                                "generate_summary_labels":  "generate_summary_labels \u003c- function(trend_spec) {",
                                "print.trend_param":  "print.trend_param \u003c- function(x, ...) {",
                                "eval_trend_constructor":  "eval_trend_constructor \u003c- function(trend_call) {",
                                "rw_trend_properties":  "rw_trend_properties \u003c- function() {",
                                "AR":  "AR = function(time = NA, series = NA, p = 1, ma = FALSE, cor = FALSE, gr = NA, subgr = NA, n_lv = NULL) {",
                                "VAR":  "VAR = function(time = NA, series = NA, p = 1, ma = FALSE, gr = NA, subgr = NA, n_lv = NULL) {",
                                "validate_trend_dispatch_consistency":  "validate_trend_dispatch_consistency \u003c- function(trend_obj) {",
                                "process_trend_params":  "process_trend_params \u003c- function(param_specs, envir = parent.frame()) {",
                                "generate_forecast_metadata":  "generate_forecast_metadata \u003c- function(trend_spec) {",
                                "custom_trend":  "custom_trend \u003c- function(trend, tpars, forecast_fun, stancode_fun, standata_fun = NULL, bounds = list(), characteristics = list(), ...) {",
                                "generate_var_monitor_params":  "generate_var_monitor_params \u003c- function(trend_spec) {",
                                "get_default_incompatibility_reason":  "get_default_incompatibility_reason \u003c- function(name) {",
                                "mvgam_trend_registry":  "mvgam_trend_registry \u003c- function() {",
                                "PW":  "PW = function(time = NA, series = NA, cap = NA, n_changepoints = 10, changepoint_range = 0.8, changepoint_scale = 0.05, growth = \u0027linear\u0027, n_lv = NULL) {",
                                "add_monitor_params":  "add_monitor_params \u003c- function(trend_obj) {",
                                "auto_register_trend_types":  "auto_register_trend_types \u003c- function() {",
                                "pw_trend_properties":  "pw_trend_properties \u003c- function() {",
                                "RW":  "RW = function( time = NA, series = NA, ma = FALSE, cor = FALSE, gr = NA, subgr = NA, n_lv = NULL) {",
                                "process_arg":  "process_arg \u003c- function(x) {",
                                "evaluate_param_conditions":  "evaluate_param_conditions \u003c- function(param_spec, envir = parent.frame()) {",
                                "mvgam_trend_pattern":  "mvgam_trend_pattern \u003c- function() {",
                                "trend_param":  "trend_param \u003c- function(name, bounds = NULL, monitor = TRUE, label = NULL, condition = TRUE) {",
                                "build_trend_label":  "build_trend_label \u003c- function(type, cor = FALSE, ma = FALSE, gr = \u0027NA\u0027, n_lv = NULL, p = NULL) {",
                                "add_consistent_dispatch_metadata":  "add_consistent_dispatch_metadata \u003c- function(trend_obj) {",
                                "normalize_trend_type":  "normalize_trend_type \u003c- function(trend_type) {",
                                "ar_trend_properties":  "ar_trend_properties \u003c- function() {",
                                "generate_forecast_required_params":  "generate_forecast_required_params \u003c- function(trend_spec, trend_type) {",
                                "validate_trend_properties":  "validate_trend_properties \u003c- function(trend_info, trend_type, func_name) {",
                                "var_trend_properties":  "var_trend_properties \u003c- function() {",
                                "apply_mvgam_trend_defaults":  "apply_mvgam_trend_defaults \u003c- function(trend_obj) {",
                                "get_trend_dispatch_function":  "get_trend_dispatch_function \u003c- function(trend_type, function_type) {",
                                "register_custom_trend":  "register_custom_trend \u003c- function(name, supports_factors = FALSE, generator_func, incompatibility_reason = NULL) {",
                                "mvgam_trend_choices":  "mvgam_trend_choices \u003c- function() {",
                                "register_core_trends":  "register_core_trends \u003c- function() {",
                                "add_forecast_metadata":  "add_forecast_metadata \u003c- function(trend_obj) {",
                                "is.trend_param":  "is.trend_param \u003c- function(x) {",
                                "extract_regular_terms":  "extract_regular_terms \u003c- function(formula_terms) {",
                                "get_mvgam_trend_defaults":  "get_mvgam_trend_defaults \u003c- function() {",
                                "get_factor_compatible_trends":  "get_factor_compatible_trends \u003c- function() {",
                                "generate_car_monitor_params":  "generate_car_monitor_params \u003c- function(trend_spec) {",
                                "ensure_registry_initialized":  "ensure_registry_initialized \u003c- function() {",
                                "filter_car_forecast_params":  "filter_car_forecast_params \u003c- function(monitor_params, trend_spec) {",
                                "CAR":  "CAR = function(time = NA, series = NA) {",
                                "car_trend_properties":  "car_trend_properties \u003c- function() {",
                                "filter_ar_forecast_params":  "filter_ar_forecast_params \u003c- function(monitor_params, trend_spec) {",
                                "filter_zmvn_forecast_params":  "filter_zmvn_forecast_params \u003c- function(monitor_params, trend_spec) {",
                                "ZMVN":  "ZMVN = function(time = NA, series = NA, gr = NA, subgr = NA, n_lv = NULL) {",
                                "filter_pw_forecast_params":  "filter_pw_forecast_params \u003c- function(monitor_params, trend_spec) {",
                                "register_trend_type":  "register_trend_type \u003c- function(name, supports_factors = FALSE, generator_func, incompatibility_reason = NULL, prior_spec = NULL) {",
                                "generate_rw_monitor_params":  "generate_rw_monitor_params \u003c- function(trend_spec) {",
                                "find_trend_terms":  "find_trend_terms \u003c- function(x) {",
                                "create_mvgam_trend":  "create_mvgam_trend \u003c- function(trend_type, ..., .time = substitute(time), .series = substitute(series), .gr = substitute(gr), .subgr = substitute(subgr), .cap = substitute(cap), .validation_rules = NULL) {",
                                "get_trend_info":  "get_trend_info \u003c- function(name) {",
                                "list_trend_types":  "list_trend_types \u003c- function() {",
                                "GP":  "GP = function(time = NA, series = NA, ...) {",
                                "is_registry_initialized":  "is_registry_initialized \u003c- function() {",
                                "print.mvgam_trend":  "print.mvgam_trend \u003c- function(x, ...) {",
                                "generate_parameter_label":  "generate_parameter_label \u003c- function(param_name, trend_type, trend_spec) {",
                                "c.trend_param":  "c.trend_param \u003c- function(x, ..., replace = FALSE) {",
                                "parse_trend_formula":  "parse_trend_formula \u003c- function(trend_formula, data = NULL) {",
                                "add_summary_labels":  "add_summary_labels \u003c- function(trend_obj) {",
                                "generate_zmvn_monitor_params":  "generate_zmvn_monitor_params \u003c- function(trend_spec) {",
                                "generate_monitor_params":  "generate_monitor_params \u003c- function(trend_spec) {",
                                "generate_ar_monitor_params":  "generate_ar_monitor_params \u003c- function(trend_spec) {",
                                "zmvn_trend_properties":  "zmvn_trend_properties \u003c- function() {",
                                "add_complete_metadata":  "add_complete_metadata \u003c- function(trend_obj) {"
                            },
    "file":  "R/trend_system.R"
}
